<?php
/**
 * Created by PhpStorm.
 * User: appleimac
 * Date: 18/5/8
 * Time: ÏÂÎç4:09
 */

namespace app\home\controller;


use app\home\model\TicketModel;
use think\Config;
use think\Controller;

class IndexController extends Controller {

    protected function _initialize() {
        $this->beforeActionList = ['grabbing'];


        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    protected function grabbing(){
        $config = Config::get('double_chromosphere');
        $ball_url = $config['curl_url'];
        $ball_year = $config['cur_year'];;
        $ball_no = $config['cur_number'];
        $fixt = $config['curl_html'];

        $cur_year = date('y', time());
        if($ball_year != $cur_year){
            $ball_year = $cur_year;
        }

        $no = substr("0" . $ball_year, -2) . substr("000" . $ball_no, -3);
        $model = new TicketModel();
        $info = $model->where('issue',$no)->find();
        if(empty($info)){
            $curl_url = $ball_url . $no . $fixt;
            $ball = file_grabbing($curl_url);
            if(!empty($ball)){
                if(intval($ball[0]) > 0 && intval($ball[1]) > 0 && intval($ball[2]) > 0 && intval($ball[3]) > 0 &&
                    intval($ball[4]) > 0 && intval($ball[5]) > 0 && intval($ball[6]) > 0) {

                    $data = array(
                        'issue' => $no,
                        'identifier' => $ball_no,
                        'red_one' => $ball[0],
                        'red_two' => $ball[1],
                        'red_three' => $ball[2],
                        'red_four' => $ball[3],
                        'red_five' => $ball[4],
                        'red_six' => $ball[5],
                        'blue' => $ball[6]
                    );

                    $model->save($data);

                    $config['cur_year'] = $ball_year;
                    $config['cur_number'] = $ball_no + 1;
                    Config::set(array('double_chromosphere' => $config));
                }
            }
        }
        unset($model,$info);
    }

    public function indexAction(){
        return $this->fetch();
    }
}